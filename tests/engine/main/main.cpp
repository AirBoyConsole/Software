#include <iostream>
#include <cstring>
#include "freertos/FreeRTOS.h"
#include "freertos/task.h"
#include "esp_log.h"
#include "esp_check.h"
#include "driver/i2c.h"

#include "vector2.hpp"
#include "engine.hpp"

#define APP_TAG "App"

using airboy::Vector2i;
using airboy::Vector2f;

const uint16_t coin[] = {
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x27a3, 0xa9dc, 0xa9dc, 0xa9dc, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
  0xffff, 0xffff, 0xffff, 0xffff, 0xa7e3, 0xa9fe, 0xa9fe, 0x9ee7, 0x9ee7, 0xa9fe, 0xa7e3, 0x27a3, 0xffff, 0xffff, 0xffff, 0xffff, 
  0xffff, 0xffff, 0x27a3, 0xa7e3, 0xa9fe, 0xa9fe, 0xa9fe, 0xa9fe, 0xa9fe, 0x9ee7, 0x9ee7, 0xa9fe, 0x27a3, 0xa9dc, 0xffff, 0xffff, 
  0xffff, 0xffff, 0xa7e3, 0xa9fe, 0xa9fe, 0xa9fe, 0xa9fe, 0xa7e3, 0xa7e3, 0xa7e3, 0xa9fe, 0x9ee7, 0xa9fe, 0x27a3, 0xffff, 0xffff, 
  0xffff, 0xa7e3, 0xa9fe, 0xa9fe, 0xa7e3, 0x27a3, 0xa9dc, 0xa9dc, 0x27a3, 0x27a3, 0xa7e3, 0xa9fe, 0x9ee7, 0xa9fe, 0xa9dc, 0xffff, 
  0xffff, 0xa7e3, 0xa9fe, 0xa9fe, 0xa9dc, 0xa9dc, 0xa9dc, 0xa9fe, 0xa9fe, 0xa9dc, 0x27a3, 0xa7e3, 0x9ee7, 0xa9fe, 0x27a3, 0xffff, 
  0x27a3, 0xa7e3, 0xa9fe, 0xa7e3, 0xa9dc, 0xa9dc, 0x27a3, 0xa9fe, 0x9ee7, 0xa9dc, 0xa9dc, 0x27a3, 0xa9fe, 0x9ee7, 0xa9fe, 0xa9dc, 
  0xa9dc, 0xa7e3, 0xa9fe, 0xa7e3, 0xa9dc, 0xa9dc, 0x27a3, 0xa9fe, 0x9ee7, 0xa9dc, 0xa9dc, 0x27a3, 0xa9fe, 0x9ee7, 0xa9fe, 0xa9dc, 
  0xa9dc, 0xa7e3, 0xa9fe, 0xa7e3, 0xa9dc, 0xa9dc, 0x27a3, 0xa9fe, 0x9ee7, 0xa9dc, 0xa9dc, 0x27a3, 0xa9fe, 0xa9fe, 0xa9fe, 0xa9fe, 
  0xa9dc, 0xa7e3, 0xa7e3, 0xa7e3, 0xa9dc, 0xa9dc, 0x27a3, 0xa7e3, 0xa9fe, 0xa9dc, 0xa9dc, 0xa9fe, 0xa7e3, 0xa7e3, 0xa7e3, 0xa9fe, 
  0xffff, 0x8591, 0x8591, 0xa7e3, 0xa9fe, 0xa9dc, 0xa9dc, 0x27a3, 0x27a3, 0xa9dc, 0x27a3, 0xa9fe, 0xa7e3, 0xa7e3, 0x27a3, 0xffff, 
  0xffff, 0x27a3, 0x8591, 0xa7e3, 0xa7e3, 0xa9fe, 0xa9dc, 0xa9dc, 0xa9dc, 0xa9dc, 0xa9fe, 0xa7e3, 0xa7e3, 0xa7e3, 0x27a3, 0xffff, 
  0xffff, 0xffff, 0x27a3, 0x8591, 0x8591, 0xa7e3, 0xa9fe, 0xa9fe, 0xa9fe, 0xa7e3, 0xa7e3, 0xa7e3, 0xa7e3, 0x27a3, 0xffff, 0xffff, 
  0xffff, 0xffff, 0xa9dc, 0x27a3, 0x8591, 0x8591, 0x8591, 0x8591, 0xa7e3, 0xa7e3, 0x8591, 0x8591, 0x27a3, 0x27a3, 0xffff, 0xffff, 
  0xffff, 0xffff, 0xffff, 0xffff, 0xa9dc, 0x27a3, 0x8591, 0x8591, 0x8591, 0x8591, 0x27a3, 0x27a3, 0xffff, 0xffff, 0xffff, 0xffff, 
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x27a3, 0x27a3, 0x27a3, 0x27a3, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
};

class Example : public airboy::Engine
{
public:
	int k = 0;

	void setup() override
	{
		// Called once at the start, so create things here
	}

	void update(float delta) override
	{
		//ESP_LOGI(APP_TAG, "pressed value: %f", delta);
		this->display->clear_buffer();

		renderer->draw_fill_rect_camera(Vector2i(64,0), Vector2i(400,64), 0x4567);
		renderer->draw_fill_rect(Vector2i(128,88), Vector2i(64,64), 0x4AB7);
		renderer->draw_bitmap(Vector2i(180,160), Vector2i(16,16), coin);
		renderer->draw_bitmap_camera(Vector2i(180,80), Vector2i(16,16), coin);
		renderer->draw_vline(Vector2i(80,120), 65, 0x7564);
		renderer->draw_hline(Vector2i(80,120), 65, 0x7564);
		renderer->draw_line(Vector2i(80,120), Vector2i(90,40), 0x7564);
	
		if (input->is_pressed(airboy::Buttons::BUTTON_DPAD_LEFT))	
		{
			renderer->camera->move(Vector2f(-1, 0));
		}
		if (input->is_pressed(airboy::Buttons::BUTTON_DPAD_RIGHT))	
		{
			renderer->camera->move(Vector2f(1, 0));
		}
		if (input->is_pressed(airboy::Buttons::BUTTON_DPAD_UP))	
		{
			renderer->camera->move(Vector2f(0, 1));
		}
		if (input->is_pressed(airboy::Buttons::BUTTON_DPAD_DOWN))	
		{
			renderer->camera->move(Vector2f(0, -1));
		}
		if (input->is_just_pressed(airboy::Buttons::BUTTON_ACTION_B))	
		{
			renderer->camera->move(Vector2f(1, 0));
		}
		if (input->is_just_pressed(airboy::Buttons::BUTTON_ACTION_X))	
		{
			renderer->camera->move(Vector2f(-1, 0));
		}
		if (input->is_just_pressed(airboy::Buttons::BUTTON_ACTION_A))	
		{
			renderer->camera->move(Vector2f(0, 1));
		}
		if (input->is_just_pressed(airboy::Buttons::BUTTON_ACTION_Y))	
		{
			renderer->camera->move(Vector2f(0, -1));
		}

		this->renderer->draw_text(airboy::Vector2i(22, 0), 2, 0xFFFF, "balon");
		this->renderer->draw_text(airboy::Vector2i(22, 36), 1, 0xFFFF, "siedem");
		//this->renderer->draw_fill_rect(airboy::Vector2i(10,10), airboy::Vector2i(55,55), 0xFFFF);
	}
};

extern "C" void app_main(void)
{
    Example demo;
	if (demo.construct())
		demo.run();
	else
		ESP_LOGE(APP_TAG, "Construct error");
}
